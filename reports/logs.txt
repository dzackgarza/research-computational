COMB: Q1=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
COMB: Q2=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 0 2
 0 0 0 0 0 0 0 0 2 0
ILLL: IndefiniteReduction, before get_nondegenerate_reduction
ILLL: get_nondegenerate_reduction, step 1
ILLL: get_nondegenerate_reduction, step 2
ILLL: get_nondegenerate_reduction, step 3
ILLL: get_nondegenerate_reduction, step 4
ILLL: get_nondegenerate_reduction, step 5
ILLL: get_nondegenerate_reduction, step 6
ILLL: get_nondegenerate_reduction, step 7
ILLL: get_nondegenerate_reduction, step 8
ILLL: get_nondegenerate_reduction, step 9
ILLL: get_nondegenerate_reduction, step 10
ILLL: IndefiniteReduction, after get_nondegenerate_reduction
ILLL: IndefiniteReduction, dim_nondeg=10
ILLL: IndefiniteReduction, We have MredA
ILLL: |Mwork|=10 / 10
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
GRABIT: nbVert=10 eProd=100
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0,1,2,3,4,5,6,7,8,9} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: Beginning of ComputeReductionIndefinite
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -4 -4 -4 -3 -2 -5/3 -7/5 -16/7 1 -1/2
ILLL: sum1=4 sum2=7/2
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 1 1 0 1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 0 0 1 0 0 1 0 1 0 0
 0 0 0 0 1 0 1 0 1 0
 0 0 0 0 0 0 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -4 -4 -4 -3 -2 -5/3 -7/5 -16/7 1 -1/2
ILLL: sum1=4 sum2=7/2
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 0 0 2 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -4 -4 -4 -3 -2 -5/3 -7/5 -16/7 1 -1/2
ILLL: sum1=3 sum2=7/2
ILLL: Swapping k=3 and 2
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -4 -4 -3 -4 -2 -5/3 -7/5 -16/7 1 -1/2
ILLL: sum1=3 sum2=7/2
ILLL: Swapping k=2 and 1
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -4 -3 -4 -4 -2 -5/3 -7/5 -16/7 1 -1/2
ILLL: sum1=4 sum2=7/2
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -4 -3 -4 -4 -2 -5/3 -7/5 -16/7 1 -1/2
ILLL: sum1=4 sum2=21/8
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -4 -3 -4 -4 -2 -5/3 -7/5 -16/7 1 -1/2
ILLL: sum1=4 sum2=7/2
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -4 -3 -4 -4 -2 -5/3 -7/5 -16/7 1 -1/2
ILLL: sum1=2 sum2=7/2
ILLL: Swapping k=4 and 3
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -4 -3 -4 -2 -4 -5/3 -7/5 -16/7 1 -1/2
ILLL: sum1=2 sum2=7/2
ILLL: Swapping k=3 and 2
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -4 -3 -2 -4 -4 -5/3 -7/5 -16/7 1 -1/2
ILLL: sum1=2 sum2=21/8
ILLL: Swapping k=2 and 1
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -4 -2 -3 -4 -4 -5/3 -7/5 -16/7 1 -1/2
ILLL: sum1=2 sum2=7/2
ILLL: Swapping k=1 and 0
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -4 -4 -5/3 -7/5 -16/7 1 -1/2
ILLL: sum1=4 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -4 -4 -5/3 -7/5 -16/7 1 -1/2
ILLL: sum1=4 sum2=7/2
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -4 -4 -5/3 -7/5 -16/7 1 -1/2
ILLL: sum1=4 sum2=21/8
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -4 -4 -5/3 -7/5 -16/7 1 -1/2
ILLL: sum1=4 sum2=7/2
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -4 -4 -5/3 -7/5 -16/7 1 -1/2
ILLL: sum1=8/3 sum2=7/2
ILLL: Swapping k=5 and 4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -4 -8/3 -5/2 -7/5 -16/7 1 -1/2
ILLL: sum1=8/3 sum2=7/2
ILLL: Swapping k=4 and 3
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 -1 0 0 -1 0 -1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -8/3 -4 -5/2 -7/5 -16/7 1 -1/2
ILLL: sum1=3 sum2=21/8
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 -1 0 -1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -8/3 -4 -5/2 -7/5 -16/7 1 -1/2
ILLL: sum1=4 sum2=7/3
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 -1 0 -1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -8/3 -4 -5/2 -7/5 -16/7 1 -1/2
ILLL: sum1=5/2 sum2=7/2
ILLL: Swapping k=5 and 4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 0 0 0 -1 0 -1 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -8/3 -5/2 -4 -7/5 -16/7 1 -1/2
ILLL: sum1=8/3 sum2=7/3
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 0 0 0 -1 0 -1 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -8/3 -5/2 -4 -7/5 -16/7 1 -1/2
ILLL: sum1=4 sum2=35/16
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 0 0 0 -1 0 -1 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -8/3 -5/2 -4 -7/5 -16/7 1 -1/2
ILLL: sum1=12/5 sum2=7/2
ILLL: Swapping k=6 and 5
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 0 0 0 -1 0 -1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 0 1 0 0 0 0 0 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 1 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -8/3 -5/2 -12/5 -7/3 -16/7 1 -1/2
ILLL: sum1=5/2 sum2=35/16
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 0 0 0 -1 0 -1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 -1 0 0 0 0 0 -1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 1 0 0 0 1 0 1 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -8/3 -5/2 -12/5 -7/3 -16/7 1 -1/2
ILLL: sum1=12/5 sum2=21/10
ILLL: Passing in Indefinite_LLL det=-1024 k=7
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 0 0 0 -1 0 -1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 -1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 2 1 0 0 1 0 2 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -8/3 -5/2 -12/5 -7/3 -16/7 1 -1/2
ILLL: sum1=7/3 sum2=49/24
ILLL: Passing in Indefinite_LLL det=-1024 k=8
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 0 0 0 -1 0 -1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 -1 0 0 0
 1 0 1 1 0 1 0 1 0 0
 3 1 1 2 1 1 2 0 1 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -8/3 -5/2 -12/5 -7/3 -16/7 1 -1/2
ILLL: sum1=6/7 sum2=2
ILLL: Swapping k=8 and 7
ILLL: Passing in Indefinite_LLL det=-1024 k=7
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 0 0 0 -1 0 -1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 -1 0 0 0
 1 1 1 1 1 1 2 0 1 0
 1 0 1 1 0 1 0 1 0 0
 1 0 1 1 0 1 0 1 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -8/3 -5/2 -12/5 -7/3 6/7 -8/3 -1/2
ILLL: sum1=2/3 sum2=49/24
ILLL: Swapping k=7 and 6
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 0 0 0 -1 0 -1 0 0 0 0
 1 1 0 0 0 0 1 0 0 0
 2 1 1 1 1 1 2 0 1 0
 0 0 0 0 0 0 -1 0 0 0
 0 -1 0 0 -1 0 -2 1 -1 0
 0 -1 0 0 -1 0 -2 1 -1 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -8/3 -5/2 -12/5 2/3 -3 -8/3 -1/2
ILLL: sum1=2/5 sum2=21/10
ILLL: Swapping k=6 and 5
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 0 0 0 -1 0 -1 0 0 0 0
 2 1 1 1 1 1 2 0 1 0
 1 1 0 0 0 0 1 0 0 0
 -2 -1 -1 -1 -1 -1 -3 0 -1 0
 -1 0 0 -2 -1 -1 -1 1 -1 0
 -1 0 0 -2 -1 -1 -1 1 -1 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -4 -3 -8/3 -5/2 2/5 -4 -3 -8/3 -1/2
ILLL: sum1=0 sum2=35/16
ILLL: Swapping k=5 and 4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -4 0 0 2 0 0 2 0 0 0
 0 -4 0 0 0 0 2 0 0 0
 0 0 -4 0 0 2 0 2 0 0
 2 0 0 -4 0 2 0 0 0 0
 0 0 0 0 -2 0 0 0 2 0
 0 0 2 2 0 -4 0 0 0 0
 2 2 0 0 0 0 -4 0 2 0
 0 0 2 0 0 0 0 -4 0 2
 0 0 0 0 2 0 2 0 -4 0
 0 0 0 0 0 0 0 2 0 -2
ILLL: B=
10 10
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 1 0 0 1 0 0 0 0 0 0
 1 0 1 1 0 1 0 0 0 0
 2 1 1 1 1 1 2 0 1 0
 0 0 0 -1 0 -1 0 0 0 0
 5 3 2 2 2 2 5 0 2 0
 -4 -1 -2 -4 -2 -3 -4 0 -2 0
 3 1 2 2 0 2 1 1 0 0
 3 1 2 2 0 2 1 1 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -4 -4 2 6 4 0 -6 0 2 -2
 -4 -8 0 2 -2 -2 -2 0 2 0
 2 0 -2 -4 -6 -2 4 0 0 2
 6 2 -4 -16 -12 -2 14 0 -4 6
 4 -2 -6 -12 -20 -6 12 0 0 6
 0 -2 -2 -2 -6 -4 2 0 0 2
 -6 -2 4 14 12 2 -14 0 4 -6
 0 0 0 0 0 0 0 -2 0 0
 2 2 0 -4 0 0 4 0 -4 2
 -2 0 2 6 6 2 -6 0 2 -4
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -4 2 2 0 6 0 0 2 2 2
 2 -4 -2 0 -6 -2 2 -6 0 -6
 2 -2 -2 0 -6 0 2 -4 0 -4
 0 0 0 -2 0 0 0 0 0 0
 6 -6 -6 0 -20 0 4 -12 -2 -12
 0 -2 0 0 0 -4 2 -4 2 -4
 0 2 2 0 4 2 -4 6 -4 6
 2 -6 -4 0 -12 -4 6 -16 2 -14
 2 0 0 0 -2 2 -4 2 -8 2
 2 -6 -4 0 -12 -4 6 -14 2 -14
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -4 -3 -2/3 -2 -2 -2 4 -3 -8/3 -1/2
ILLL: sum1=4 sum2=7/2
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 -4 2 2 0 6 0 0 2 2 2
 2 -4 -2 0 -6 -2 2 -6 0 -6
 2 -2 -2 0 -6 0 2 -4 0 -4
 0 0 0 -2 0 0 0 0 0 0
 6 -6 -6 0 -20 0 4 -12 -2 -12
 0 -2 0 0 0 -4 2 -4 2 -4
 0 2 2 0 4 2 -4 6 -4 6
 2 -6 -4 0 -12 -4 6 -16 2 -14
 2 0 0 0 -2 2 -4 2 -8 2
 2 -6 -4 0 -12 -4 6 -14 2 -14
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 1 1 0 0 0 0 0 0 0 0
 1 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 2 -1 -3 0 1 0 0 0 0 0
 0 -1 1 0 0 1 0 0 0 0
 0 1 2 0 -1 1 1 0 0 0
 1 -2 -2 0 0 -1 1 1 0 0
 1 0 1 0 -1 1 0 0 1 0
 1 -2 -2 0 0 -1 1 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -4 -3 -2/3 -2 -2 -2 4 -3 -8/3 -1/2
ILLL: sum1=1 sum2=21/8
ILLL: Swapping k=2 and 1
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -4 2 2 0 6 0 0 2 2 2
 2 -4 -2 0 -6 -2 2 -6 0 -6
 2 -2 -2 0 -6 0 2 -4 0 -4
 0 0 0 -2 0 0 0 0 0 0
 6 -6 -6 0 -20 0 4 -12 -2 -12
 0 -2 0 0 0 -4 2 -4 2 -4
 0 2 2 0 4 2 -4 6 -4 6
 2 -6 -4 0 -12 -4 6 -16 2 -14
 2 0 0 0 -2 2 -4 2 -8 2
 2 -6 -4 0 -12 -4 6 -14 2 -14
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 1 0 1 0 0 0 0 0 0 0
 1 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 1 0 -3 0 1 0 0 0 0 0
 0 -1 1 0 0 1 0 0 0 0
 3 0 6 0 -1 1 1 0 0 0
 0 0 3 0 -1 0 1 1 0 0
 4 0 5 0 -1 1 0 0 1 0
 0 0 3 0 -1 0 1 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -4 -1 -2 -2 -2 -2 4 -3 -8/3 -1/2
ILLL: sum1=2 sum2=7/2
ILLL: Swapping k=1 and 0
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -4 2 2 0 6 0 0 2 2 2
 2 -4 -2 0 -6 -2 2 -6 0 -6
 2 -2 -2 0 -6 0 2 -4 0 -4
 0 0 0 -2 0 0 0 0 0 0
 6 -6 -6 0 -20 0 4 -12 -2 -12
 0 -2 0 0 0 -4 2 -4 2 -4
 0 2 2 0 4 2 -4 6 -4 6
 2 -6 -4 0 -12 -4 6 -16 2 -14
 2 0 0 0 -2 2 -4 2 -8 2
 2 -6 -4 0 -12 -4 6 -14 2 -14
ILLL: B=
10 10
 1 0 1 0 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 1 -1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 -3 0 1 0 0 0 0 0
 0 -1 1 0 0 1 0 0 0 0
 0 -1 5 0 -1 1 1 0 0 0
 -1 -1 2 0 -1 0 1 1 0 0
 0 -1 4 0 -1 1 0 0 1 0
 -1 -1 2 0 -1 0 1 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 4 -3 -8/3 -1/2
ILLL: sum1=4 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 -4 2 2 0 6 0 0 2 2 2
 2 -4 -2 0 -6 -2 2 -6 0 -6
 2 -2 -2 0 -6 0 2 -4 0 -4
 0 0 0 -2 0 0 0 0 0 0
 6 -6 -6 0 -20 0 4 -12 -2 -12
 0 -2 0 0 0 -4 2 -4 2 -4
 0 2 2 0 4 2 -4 6 -4 6
 2 -6 -4 0 -12 -4 6 -16 2 -14
 2 0 0 0 -2 2 -4 2 -8 2
 2 -6 -4 0 -12 -4 6 -14 2 -14
ILLL: B=
10 10
 1 0 1 0 0 0 0 0 0 0
 0 0 -1 0 0 0 0 0 0 0
 0 1 -1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 -3 0 1 0 0 0 0 0
 0 -1 1 0 0 1 0 0 0 0
 1 -1 6 0 -1 1 1 0 0 0
 0 -1 3 0 -1 0 1 1 0 0
 1 -1 5 0 -1 1 0 0 1 0
 0 -1 3 0 -1 0 1 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 4 -3 -8/3 -1/2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 -4 2 2 0 6 0 0 2 2 2
 2 -4 -2 0 -6 -2 2 -6 0 -6
 2 -2 -2 0 -6 0 2 -4 0 -4
 0 0 0 -2 0 0 0 0 0 0
 6 -6 -6 0 -20 0 4 -12 -2 -12
 0 -2 0 0 0 -4 2 -4 2 -4
 0 2 2 0 4 2 -4 6 -4 6
 2 -6 -4 0 -12 -4 6 -16 2 -14
 2 0 0 0 -2 2 -4 2 -8 2
 2 -6 -4 0 -12 -4 6 -14 2 -14
ILLL: B=
10 10
 1 0 1 0 0 0 0 0 0 0
 0 0 -1 0 0 0 0 0 0 0
 0 1 -1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 -3 0 1 0 0 0 0 0
 0 -1 1 0 0 1 0 0 0 0
 1 -1 6 0 -1 1 1 0 0 0
 0 -1 3 0 -1 0 1 1 0 0
 1 -1 5 0 -1 1 0 0 1 0
 0 -1 3 0 -1 0 1 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 4 -3 -8/3 -1/2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -4 2 2 0 6 0 0 2 2 2
 2 -4 -2 0 -6 -2 2 -6 0 -6
 2 -2 -2 0 -6 0 2 -4 0 -4
 0 0 0 -2 0 0 0 0 0 0
 6 -6 -6 0 -20 0 4 -12 -2 -12
 0 -2 0 0 0 -4 2 -4 2 -4
 0 2 2 0 4 2 -4 6 -4 6
 2 -6 -4 0 -12 -4 6 -16 2 -14
 2 0 0 0 -2 2 -4 2 -8 2
 2 -6 -4 0 -12 -4 6 -14 2 -14
ILLL: B=
10 10
 1 0 1 0 0 0 0 0 0 0
 0 0 -1 0 0 0 0 0 0 0
 0 1 -1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 -3 0 1 0 0 0 0 0
 0 -1 1 0 0 1 0 0 0 0
 1 -1 6 0 -1 1 1 0 0 0
 0 -1 3 0 -1 0 1 1 0 0
 1 -1 5 0 -1 1 0 0 1 0
 0 -1 3 0 -1 0 1 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 4 -3 -8/3 -1/2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -4 2 2 0 6 0 0 2 2 2
 2 -4 -2 0 -6 -2 2 -6 0 -6
 2 -2 -2 0 -6 0 2 -4 0 -4
 0 0 0 -2 0 0 0 0 0 0
 6 -6 -6 0 -20 0 4 -12 -2 -12
 0 -2 0 0 0 -4 2 -4 2 -4
 0 2 2 0 4 2 -4 6 -4 6
 2 -6 -4 0 -12 -4 6 -16 2 -14
 2 0 0 0 -2 2 -4 2 -8 2
 2 -6 -4 0 -12 -4 6 -14 2 -14
ILLL: B=
10 10
 1 0 1 0 0 0 0 0 0 0
 0 0 -1 0 0 0 0 0 0 0
 0 1 -1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 -3 0 1 0 0 0 0 0
 0 -1 1 0 0 1 0 0 0 0
 1 -1 6 0 -1 1 1 0 0 0
 0 -1 3 0 -1 0 1 1 0 0
 1 -1 5 0 -1 1 0 0 1 0
 0 -1 3 0 -1 0 1 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 4 -3 -8/3 -1/2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 -4 2 2 0 6 0 0 2 2 2
 2 -4 -2 0 -6 -2 2 -6 0 -6
 2 -2 -2 0 -6 0 2 -4 0 -4
 0 0 0 -2 0 0 0 0 0 0
 6 -6 -6 0 -20 0 4 -12 -2 -12
 0 -2 0 0 0 -4 2 -4 2 -4
 0 2 2 0 4 2 -4 6 -4 6
 2 -6 -4 0 -12 -4 6 -16 2 -14
 2 0 0 0 -2 2 -4 2 -8 2
 2 -6 -4 0 -12 -4 6 -14 2 -14
ILLL: B=
10 10
 1 0 1 0 0 0 0 0 0 0
 0 0 -1 0 0 0 0 0 0 0
 0 1 -1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 -3 0 1 0 0 0 0 0
 0 -1 1 0 0 1 0 0 0 0
 1 -1 6 0 -1 1 1 0 0 0
 0 -1 3 0 -1 0 1 1 0 0
 1 -1 5 0 -1 1 0 0 1 0
 0 -1 3 0 -1 0 1 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 4 -3 -8/3 -1/2
ILLL: sum1=4 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=7
ILLL: M=
10 10
 -4 2 2 0 6 0 0 2 2 2
 2 -4 -2 0 -6 -2 2 -6 0 -6
 2 -2 -2 0 -6 0 2 -4 0 -4
 0 0 0 -2 0 0 0 0 0 0
 6 -6 -6 0 -20 0 4 -12 -2 -12
 0 -2 0 0 0 -4 2 -4 2 -4
 0 2 2 0 4 2 -4 6 -4 6
 2 -6 -4 0 -12 -4 6 -16 2 -14
 2 0 0 0 -2 2 -4 2 -8 2
 2 -6 -4 0 -12 -4 6 -14 2 -14
ILLL: B=
10 10
 1 0 1 0 0 0 0 0 0 0
 0 0 -1 0 0 0 0 0 0 0
 0 1 -1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 -3 0 1 0 0 0 0 0
 0 -1 1 0 0 1 0 0 0 0
 1 -1 6 0 -1 1 1 0 0 0
 0 -1 3 0 -1 0 1 1 0 0
 1 -1 5 0 -1 1 0 0 1 0
 0 -1 3 0 -1 0 1 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 4 -3 -8/3 -1/2
ILLL: sum1=2 sum2=7/2
ILLL: Swapping k=7 and 6
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 -4 2 2 0 6 0 0 2 2 2
 2 -4 -2 0 -6 -2 2 -6 0 -6
 2 -2 -2 0 -6 0 2 -4 0 -4
 0 0 0 -2 0 0 0 0 0 0
 6 -6 -6 0 -20 0 4 -12 -2 -12
 0 -2 0 0 0 -4 2 -4 2 -4
 0 2 2 0 4 2 -4 6 -4 6
 2 -6 -4 0 -12 -4 6 -16 2 -14
 2 0 0 0 -2 2 -4 2 -8 2
 2 -6 -4 0 -12 -4 6 -14 2 -14
ILLL: B=
10 10
 1 0 1 0 0 0 0 0 0 0
 0 0 -1 0 0 0 0 0 0 0
 0 1 -1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 -3 0 1 0 0 0 0 0
 0 -1 1 0 0 1 0 0 0 0
 0 -1 3 0 -1 0 1 1 0 0
 1 -1 6 0 -1 1 1 0 0 0
 1 -1 5 0 -1 1 0 0 1 0
 0 -1 3 0 -1 0 1 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 -2 6 -8/3 -1/2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=7
ILLL: M=
10 10
 -4 2 2 0 6 0 0 2 2 2
 2 -4 -2 0 -6 -2 2 -6 0 -6
 2 -2 -2 0 -6 0 2 -4 0 -4
 0 0 0 -2 0 0 0 0 0 0
 6 -6 -6 0 -20 0 4 -12 -2 -12
 0 -2 0 0 0 -4 2 -4 2 -4
 0 2 2 0 4 2 -4 6 -4 6
 2 -6 -4 0 -12 -4 6 -16 2 -14
 2 0 0 0 -2 2 -4 2 -8 2
 2 -6 -4 0 -12 -4 6 -14 2 -14
ILLL: B=
10 10
 1 0 1 0 0 0 0 0 0 0
 0 0 -1 0 0 0 0 0 0 0
 0 1 -1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 -3 0 1 0 0 0 0 0
 0 -1 1 0 0 1 0 0 0 0
 0 -1 3 0 -1 0 1 1 0 0
 1 -2 9 0 -2 1 2 1 0 0
 1 -1 5 0 -1 1 0 0 1 0
 0 -1 3 0 -1 0 1 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 -2 6 -8/3 -1/2
ILLL: sum1=6 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=8
ILLL: M=
10 10
 -4 2 2 0 6 0 0 2 2 2
 2 -4 -2 0 -6 -2 2 -6 0 -6
 2 -2 -2 0 -6 0 2 -4 0 -4
 0 0 0 -2 0 0 0 0 0 0
 6 -6 -6 0 -20 0 4 -12 -2 -12
 0 -2 0 0 0 -4 2 -4 2 -4
 0 2 2 0 4 2 -4 6 -4 6
 2 -6 -4 0 -12 -4 6 -16 2 -14
 2 0 0 0 -2 2 -4 2 -8 2
 2 -6 -4 0 -12 -4 6 -14 2 -14
ILLL: B=
10 10
 1 0 1 0 0 0 0 0 0 0
 0 0 -1 0 0 0 0 0 0 0
 0 1 -1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 -3 0 1 0 0 0 0 0
 0 -1 1 0 0 1 0 0 0 0
 0 -1 3 0 -1 0 1 1 0 0
 1 -2 9 0 -2 1 2 1 0 0
 1 -1 5 0 -1 1 0 0 1 0
 0 -1 3 0 -1 0 1 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 -2 6 -8/3 -1/2
ILLL: sum1=2 sum2=21/4
ILLL: Swapping k=8 and 7
ILLL: Passing in Indefinite_LLL det=-1024 k=7
ILLL: M=
10 10
 -4 2 2 0 6 0 0 2 2 2
 2 -4 -2 0 -6 -2 2 -6 0 -6
 2 -2 -2 0 -6 0 2 -4 0 -4
 0 0 0 -2 0 0 0 0 0 0
 6 -6 -6 0 -20 0 4 -12 -2 -12
 0 -2 0 0 0 -4 2 -4 2 -4
 0 2 2 0 4 2 -4 6 -4 6
 2 -6 -4 0 -12 -4 6 -16 2 -14
 2 0 0 0 -2 2 -4 2 -8 2
 2 -6 -4 0 -12 -4 6 -14 2 -14
ILLL: B=
10 10
 1 0 1 0 0 0 0 0 0 0
 0 0 -1 0 0 0 0 0 0 0
 0 1 -1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 -3 0 1 0 0 0 0 0
 0 -1 1 0 0 1 0 0 0 0
 0 -1 3 0 -1 0 1 1 0 0
 1 -1 5 0 -1 1 0 0 1 0
 1 -2 9 0 -2 1 2 1 0 0
 0 -1 3 0 -1 0 1 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 -2 -2 8 -1/2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=8
ILLL: M=
10 10
 -4 2 2 0 6 0 0 2 2 2
 2 -4 -2 0 -6 -2 2 -6 0 -6
 2 -2 -2 0 -6 0 2 -4 0 -4
 0 0 0 -2 0 0 0 0 0 0
 6 -6 -6 0 -20 0 4 -12 -2 -12
 0 -2 0 0 0 -4 2 -4 2 -4
 0 2 2 0 4 2 -4 6 -4 6
 2 -6 -4 0 -12 -4 6 -16 2 -14
 2 0 0 0 -2 2 -4 2 -8 2
 2 -6 -4 0 -12 -4 6 -14 2 -14
ILLL: B=
10 10
 1 0 1 0 0 0 0 0 0 0
 0 0 -1 0 0 0 0 0 0 0
 0 1 -1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 -3 0 1 0 0 0 0 0
 0 -1 1 0 0 1 0 0 0 0
 0 -1 3 0 -1 0 1 1 0 0
 1 -1 5 0 -1 1 0 0 1 0
 2 -3 14 0 -3 2 2 1 1 0
 0 -1 3 0 -1 0 1 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 -2 -2 8 -1/2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=9
ILLL: M=
10 10
 -4 2 2 0 6 0 0 2 2 2
 2 -4 -2 0 -6 -2 2 -6 0 -6
 2 -2 -2 0 -6 0 2 -4 0 -4
 0 0 0 -2 0 0 0 0 0 0
 6 -6 -6 0 -20 0 4 -12 -2 -12
 0 -2 0 0 0 -4 2 -4 2 -4
 0 2 2 0 4 2 -4 6 -4 6
 2 -6 -4 0 -12 -4 6 -16 2 -14
 2 0 0 0 -2 2 -4 2 -8 2
 2 -6 -4 0 -12 -4 6 -14 2 -14
ILLL: B=
10 10
 1 0 1 0 0 0 0 0 0 0
 0 0 -1 0 0 0 0 0 0 0
 0 1 -1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 -3 0 1 0 0 0 0 0
 0 -1 1 0 0 1 0 0 0 0
 0 -1 3 0 -1 0 1 1 0 0
 1 -1 5 0 -1 1 0 0 1 0
 2 -3 14 0 -3 2 2 1 1 0
 0 -1 3 0 -1 0 1 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 -2 -2 8 -1/2
ILLL: sum1=0 sum2=7
ILLL: Swapping k=9 and 8
ILLL: Passing in Indefinite_LLL det=-1024 k=8
ILLL: M=
10 10
 -4 2 2 0 6 0 0 2 2 2
 2 -4 -2 0 -6 -2 2 -6 0 -6
 2 -2 -2 0 -6 0 2 -4 0 -4
 0 0 0 -2 0 0 0 0 0 0
 6 -6 -6 0 -20 0 4 -12 -2 -12
 0 -2 0 0 0 -4 2 -4 2 -4
 0 2 2 0 4 2 -4 6 -4 6
 2 -6 -4 0 -12 -4 6 -16 2 -14
 2 0 0 0 -2 2 -4 2 -8 2
 2 -6 -4 0 -12 -4 6 -14 2 -14
ILLL: B=
10 10
 1 0 1 0 0 0 0 0 0 0
 0 0 -1 0 0 0 0 0 0 0
 0 1 -1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 -3 0 1 0 0 0 0 0
 0 -1 1 0 0 1 0 0 0 0
 0 -1 3 0 -1 0 1 1 0 0
 1 -1 5 0 -1 1 0 0 1 0
 0 -1 3 0 -1 0 1 0 0 1
 2 -3 14 0 -3 2 2 1 1 0
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 0 0 0 0 0 2 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 2 0 0 0 0 8 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 2 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -1/2 -2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 2 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -1/2 -2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 2 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -1/2 -2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 2 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -1/2 -2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 2 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -1/2 -2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=5 and 4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 2 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 8 -1/2 -2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 2 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 8 -1/2 -2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 2 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 8 -1/2 -2 -2 -2
ILLL: sum1=0 sum2=7
ILLL: Swapping k=6 and 5
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 2 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 2
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 2 0 0 0 0 8
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 -2 0 0 0 0 0 8 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 2 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 2 0 0 0 0 0 8 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 -2 0 0 0 0 0 8 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 8 0 0 2 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = 8 -2 -2 -1/2 -2 -2 -2 -2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=1 and 0
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 8 0 0 2 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 8 -2 -1/2 -2 -2 -2 -2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 8 0 0 2 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 8 -2 -1/2 -2 -2 -2 -2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=2 and 1
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 8 0 0 2 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 8 -1/2 -2 -2 -2 -2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 8 0 0 2 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 8 -1/2 -2 -2 -2 -2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 8 0 0 2 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 8 -1/2 -2 -2 -2 -2 -2 -2
ILLL: sum1=0 sum2=7
ILLL: Swapping k=3 and 2
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 8 0 0 2 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 8 0 0 0 2 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = 8 -2 -2 -2 -1/2 -2 -2 -2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=1 and 0
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 8 0 0 0 2 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 8 -2 -2 -1/2 -2 -2 -2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 8 0 0 0 2 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 8 -2 -2 -1/2 -2 -2 -2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=2 and 1
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 8 0 0 0 2 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 8 -2 -1/2 -2 -2 -2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 8 0 0 0 2 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 8 -2 -1/2 -2 -2 -2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 8 0 0 0 2 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 8 -2 -1/2 -2 -2 -2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=3 and 2
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 8 0 0 0 2 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 8 -1/2 -2 -2 -2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 8 0 0 0 2 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 8 -1/2 -2 -2 -2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 8 0 0 0 2 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 8 -1/2 -2 -2 -2 -2 -2
ILLL: sum1=0 sum2=7
ILLL: Swapping k=4 and 3
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 8 0 0 0 2 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 8 -2 -2 -2 -2 -2 -2 -2 -1/2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 8 -2 -2 -2 -2 -2 -2 -2 -1/2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=2 and 1
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 8 -2 -2 -2 -2 -2 -2 -1/2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 8 -2 -2 -2 -2 -2 -2 -1/2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 8 -2 -2 -2 -2 -2 -2 -1/2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=3 and 2
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 8 -2 -2 -2 -2 -2 -1/2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 8 -2 -2 -2 -2 -2 -1/2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 8 -2 -2 -2 -2 -2 -1/2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=4 and 3
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -2 -2 -2 -1/2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -2 -2 -2 -1/2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -2 -2 -2 -1/2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=5 and 4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 8 -2 -2 -2 -1/2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 8 -2 -2 -2 -1/2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 8 -2 -2 -2 -1/2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=6 and 5
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 8 -2 -2 -1/2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 8 -2 -2 -1/2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=7
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 8 -2 -2 -1/2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=7 and 6
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 -2 8 -2 -1/2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=7
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 -2 8 -2 -1/2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=8
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 -2 8 -2 -1/2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=8 and 7
ILLL: Passing in Indefinite_LLL det=-1024 k=7
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 -2 -2 8 -1/2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=8
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 -2 -2 8 -1/2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=9
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 -2 -2 8 -1/2
ILLL: sum1=0 sum2=7
ILLL: Swapping k=9 and 8
ILLL: Passing in Indefinite_LLL det=-1024 k=8
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 0 0 0 0 0 2
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 2 0 0 0 0 0 0 0 0
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
 0 1 0 0 0 0 0 0 0 0
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 -2 8 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 8 0 0 0 0 -2 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 8 -2 -2 -2 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 8 0 0 0 0 -2 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 8 -2 -2 -2 -2 -1/2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 8 0 0 0 0 -2 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 8 -2 -2 -2 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=3 and 2
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 8 0 0 0 0 -2 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 8 -2 -2 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 8 0 0 0 0 -2 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 8 -2 -2 -2 -1/2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 8 0 0 0 0 -2 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 8 -2 -2 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=4 and 3
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 8 0 0 0 0 -2 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 8 0 0 0 0 -2 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -2 -1/2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 8 0 0 0 0 -2 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=5 and 4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 8 0 0 0 0 -2 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 8 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 8 0 0 0 0 -2 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 8 -2 -1/2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 8 0 0 0 0 -2 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 8 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=6 and 5
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 8 0 0 0 0 -2 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 8 -1/2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 8 0 0 0 0 -2 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 8 -1/2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=7
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 8 0 0 0 0 -2 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 8 -1/2 -2 -2
ILLL: sum1=0 sum2=7
ILLL: Swapping k=7 and 6
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 8 0 0 0 0 -2 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 -2 0 0 8 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 2
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 2 0 0 0 0 0 0 8
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -2 -1/2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=5 and 4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 8 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 8 -2 -1/2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 8 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=6 and 5
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 8 -1/2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 8 -1/2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=7
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 8 -1/2 -2 -2
ILLL: sum1=0 sum2=7
ILLL: Swapping k=7 and 6
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -2 -1/2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=5 and 4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 8 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 8 -2 -1/2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 8 -2 -1/2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=6 and 5
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 8 -1/2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 8 -1/2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=7
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 -2 8 -1/2 -2 -2
ILLL: sum1=0 sum2=7
ILLL: Swapping k=7 and 6
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 8 0 0 2 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 2 0 0 0 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 2 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 2 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 8 -2 -2 -1/2 -2 -2 -2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 2 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 2 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 8 -2 -2 -1/2 -2 -2 -2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=2 and 1
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 2 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 2 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 8 -2 -1/2 -2 -2 -2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 2 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 2 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 8 -2 -1/2 -2 -2 -2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 2 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 2 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 8 -2 -1/2 -2 -2 -2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=3 and 2
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 2 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 2 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 8 -1/2 -2 -2 -2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 2 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 2 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 8 -1/2 -2 -2 -2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 2 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 2 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 8 -1/2 -2 -2 -2 -2 -2
ILLL: sum1=0 sum2=7
ILLL: Swapping k=4 and 3
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 8 0 0 2 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 2 0 0 0 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 2 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 2 0 0 0 0 8 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 2
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 2 0 0 0 8
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 0 0 0 0 0 0 -2 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 -2 0 0 0 0 0 8 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 8 0 0 0 0 0 2 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 1 0 0 0 0 0 0 0 0 0
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = 8 -2 -2 -2 -2 -2 -1/2 -2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=1 and 0
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 8 0 0 0 0 0 2 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 8 -2 -2 -2 -2 -1/2 -2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 8 0 0 0 0 0 2 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 8 -2 -2 -2 -2 -1/2 -2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=2 and 1
ILLL: Passing in Indefinite_LLL det=-1024 k=1
ILLL: M=
10 10
 8 0 0 0 0 0 2 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 8 -2 -2 -2 -1/2 -2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 8 0 0 0 0 0 2 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 8 -2 -2 -2 -1/2 -2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 8 0 0 0 0 0 2 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 8 -2 -2 -2 -1/2 -2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=3 and 2
ILLL: Passing in Indefinite_LLL det=-1024 k=2
ILLL: M=
10 10
 8 0 0 0 0 0 2 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 8 -2 -2 -1/2 -2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 8 0 0 0 0 0 2 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 8 -2 -2 -1/2 -2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 8 0 0 0 0 0 2 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 8 -2 -2 -1/2 -2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=4 and 3
ILLL: Passing in Indefinite_LLL det=-1024 k=3
ILLL: M=
10 10
 8 0 0 0 0 0 2 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -1/2 -2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 8 0 0 0 0 0 2 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -1/2 -2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 8 0 0 0 0 0 2 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 8 -2 -1/2 -2 -2 -2
ILLL: sum1=2 sum2=7
ILLL: Swapping k=5 and 4
ILLL: Passing in Indefinite_LLL det=-1024 k=4
ILLL: M=
10 10
 8 0 0 0 0 0 2 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 8 -1/2 -2 -2 -2
ILLL: sum1=2 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 8 0 0 0 0 0 2 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 8 -1/2 -2 -2 -2
ILLL: sum1=8 sum2=7/4
ILLL: Passing in Indefinite_LLL det=-1024 k=6
ILLL: M=
10 10
 8 0 0 0 0 0 2 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: det1=-1024 det2=-1024
ILLL: Bstar_norms = -2 -2 -2 -2 -2 8 -1/2 -2 -2 -2
ILLL: sum1=0 sum2=7
ILLL: Swapping k=6 and 5
ILLL: Passing in Indefinite_LLL det=-1024 k=5
ILLL: M=
10 10
 8 0 0 0 0 0 2 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
ILLL: B=
10 10
 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 0 0 0
 0 0 0 1 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 1 0 0 0 0
 0 0 0 0 0 0 1 0 0 0
 1 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 1 0 0
 0 0 0 0 0 0 0 0 1 0
 0 0 0 0 0 0 0 0 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
|ILLL: ComputeReductionIndefinite(None)|=109489
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=28 norm_work=72
ILLL: choice=0 was successful, |norm old|=72 |norm new|=28
ILLL: |Mwork|=10 / 10
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 0 2 0 0 0
 0 0 0 0 0 2 8 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
GRABIT: nbVert=10 eProd=100
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} {1} {2} {3} {4} {5,6} {7} {8} {9} ]
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=2 RankMat(M_conn)=2
ILLL: |Mwork|=2 / 2
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
2 2
 0 2
 2 8
GRABIT: nbVert=2 eProd=4
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0,1} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: Beginning of ComputeReductionIndefinite
ILLL: Passing in Indefinite_LLL det=-4 k=1
ILLL: M=
2 2
 0 2
 2 8
ILLL: B=
2 2
 1 0
 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-4 k=1
ILLL: M=
2 2
 8 2
 2 0
ILLL: B=
2 2
 1 0
 0 1
ILLL: det1=-4 det2=-4
ILLL: Bstar_norms = 8 -1/2
ILLL: sum1=0 sum2=7
ILLL: Swapping k=1 and 0
ILLL: Passing in Indefinite_LLL det=-4 k=1
ILLL: M=
2 2
 8 2
 2 0
ILLL: B=
2 2
 0 1
 1 0
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-4 k=1
ILLL: M=
2 2
 8 -2
 -2 0
ILLL: B=
2 2
 1 0
 0 1
ILLL: det1=-4 det2=-4
ILLL: Bstar_norms = 8 -1/2
ILLL: sum1=0 sum2=7
ILLL: Swapping k=1 and 0
ILLL: Passing in Indefinite_LLL det=-4 k=1
ILLL: M=
2 2
 8 -2
 -2 0
ILLL: B=
2 2
 0 1
 1 0
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-4 k=1
ILLL: M=
2 2
 0 -2
 -2 8
ILLL: B=
2 2
 1 0
 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
|ILLL: ComputeReductionIndefinite(None)|=187
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=12 norm_work=12
ILLL: |Mwork|=2 / 2
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
2 2
 0 2
 2 8
GRABIT: nbVert=2 eProd=4
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0,1} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
=======================================================
ILLL: n=2
ILLL: M=
2 2
 0 2
 2 8
ILLL: L1(M)=12
ILLL: eval: i=1 j=0 c=-1
ILLL: eval, off: k=0 val1=2 val2=2
ILLL: eval, diag, val1=8 val2=4
ILLL: eval, summary, delta_off=0 delta_diag=4 delta=4
ILLL: eval: i=1 j=0 c=-2
ILLL: eval, off: k=0 val1=2 val2=2
ILLL: eval, diag, val1=8 val2=0
ILLL: eval, summary, delta_off=0 delta_diag=8 delta=8
ILLL: eval: i=1 j=0 c=-3
ILLL: eval, off: k=0 val1=2 val2=2
ILLL: eval, diag, val1=8 val2=4
ILLL: eval, summary, delta_off=0 delta_diag=4 delta=4
ILLL: x_final=(1 / 0 / -2)
------------ n_oper=1 --------------------
ILLL: i=1 j=0 c=-2
ILLL: Mwork=
2 2
 0 2
 2 8
ILLL: pair.first(B)=
2 2
 1 0
 -2 1
ILLL: pair.second(M)=
2 2
 0 2
 2 0
ILLL: L1(Mwork)=12 L1(pair.second)=4
ILLL: eval: i=1 j=0 c=-2
ILLL: eval, off: k=0 val1=2 val2=2
ILLL: eval, diag, val1=8 val2=0
ILLL: eval, summary, delta_off=0 delta_diag=8 delta=8
ILLL: eval: i=0 j=1 c=-1
ILLL: eval, off: k=1 val1=2 val2=2
ILLL: eval, diag, val1=0 val2=4
ILLL: eval, summary, delta_off=0 delta_diag=-4 delta=-4
ILLL: eval: i=0 j=1 c=1
ILLL: eval, off: k=1 val1=2 val2=2
ILLL: eval, diag, val1=0 val2=4
ILLL: eval, summary, delta_off=0 delta_diag=-4 delta=-4
ILLL: eval: i=1 j=0 c=-1
ILLL: eval, off: k=0 val1=2 val2=2
ILLL: eval, diag, val1=0 val2=4
ILLL: eval, summary, delta_off=0 delta_diag=-4 delta=-4
ILLL: eval: i=1 j=0 c=1
ILLL: eval, off: k=0 val1=2 val2=2
ILLL: eval, diag, val1=0 val2=4
ILLL: eval, summary, delta_off=0 delta_diag=-4 delta=-4
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=4 norm_work=12
ILLL: choice=1 was successful, |norm old|=12 |norm new|=4
ILLL: n_iter=0 n_operation=1
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: Obtained opt from compute_by_block choice=1
ILLL: Call to compute_by_block was successful, returning
ILLL: IndefiniteReduction, We have res
ILLL: IndefiniteReduction, We have MredB / BredB
ILLL: IndefiniteReduction, before get_nondegenerate_reduction
ILLL: get_nondegenerate_reduction, step 1
ILLL: get_nondegenerate_reduction, step 2
ILLL: get_nondegenerate_reduction, step 3
ILLL: get_nondegenerate_reduction, step 4
ILLL: get_nondegenerate_reduction, step 5
ILLL: get_nondegenerate_reduction, step 6
ILLL: get_nondegenerate_reduction, step 7
ILLL: get_nondegenerate_reduction, step 8
ILLL: get_nondegenerate_reduction, step 9
ILLL: get_nondegenerate_reduction, step 10
ILLL: IndefiniteReduction, after get_nondegenerate_reduction
ILLL: IndefiniteReduction, dim_nondeg=10
ILLL: IndefiniteReduction, We have MredA
ILLL: |Mwork|=10 / 10
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 0 2
 0 0 0 0 0 0 0 0 2 0
GRABIT: nbVert=10 eProd=100
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} {1} {2} {3} {4} {5} {6} {7} {8,9} ]
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=2 RankMat(M_conn)=2
ILLL: |Mwork|=2 / 2
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
2 2
 0 2
 2 0
GRABIT: nbVert=2 eProd=4
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0,1} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: Beginning of ComputeReductionIndefinite
ILLL: Passing in Indefinite_LLL det=-4 k=1
ILLL: M=
2 2
 0 2
 2 0
ILLL: B=
2 2
 1 0
 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-4 k=1
ILLL: M=
2 2
 0 -2
 -2 0
ILLL: B=
2 2
 1 0
 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-4 k=1
ILLL: M=
2 2
 0 -2
 -2 0
ILLL: B=
2 2
 1 0
 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-4 k=1
ILLL: M=
2 2
 0 -2
 -2 0
ILLL: B=
2 2
 1 0
 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
|ILLL: ComputeReductionIndefinite(None)|=116
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=4 norm_work=4
ILLL: |Mwork|=2 / 2
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
2 2
 0 2
 2 0
GRABIT: nbVert=2 eProd=4
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0,1} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
=======================================================
ILLL: n=2
ILLL: M=
2 2
 0 2
 2 0
ILLL: L1(M)=4
ILLL: eval: i=1 j=0 c=-1
ILLL: eval, off: k=0 val1=2 val2=2
ILLL: eval, diag, val1=0 val2=4
ILLL: eval, summary, delta_off=0 delta_diag=-4 delta=-4
ILLL: eval: i=1 j=0 c=1
ILLL: eval, off: k=0 val1=2 val2=2
ILLL: eval, diag, val1=0 val2=4
ILLL: eval, summary, delta_off=0 delta_diag=-4 delta=-4
ILLL: eval: i=0 j=1 c=-1
ILLL: eval, off: k=1 val1=2 val2=2
ILLL: eval, diag, val1=0 val2=4
ILLL: eval, summary, delta_off=0 delta_diag=-4 delta=-4
ILLL: eval: i=0 j=1 c=1
ILLL: eval, off: k=1 val1=2 val2=2
ILLL: eval, diag, val1=0 val2=4
ILLL: eval, summary, delta_off=0 delta_diag=-4 delta=-4
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=4 norm_work=4
ILLL: n_iter=0 n_operation=0
ILLL: Obtained opt from compute_by_block choice=0
ILLL: Call to compute_by_block was successful, returning
ILLL: IndefiniteReduction, We have res
ILLL: IndefiniteReduction, We have MredB / BredB
COMB: res1.Mred=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 0 2 0 0 0
 0 0 0 0 0 2 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
COMB: res2.Mred=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 0 2
 0 0 0 0 0 0 0 0 2 0
COMB: QmatRed1=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 0 2 0 0 0
 0 0 0 0 0 2 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
COMB: QmatRed2=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 0 2
 0 0 0 0 0 0 0 0 2 0
ILLL: IndefiniteReduction, before get_nondegenerate_reduction
ILLL: get_nondegenerate_reduction, step 1
ILLL: get_nondegenerate_reduction, step 2
ILLL: get_nondegenerate_reduction, step 3
ILLL: get_nondegenerate_reduction, step 4
ILLL: get_nondegenerate_reduction, step 5
ILLL: get_nondegenerate_reduction, step 6
ILLL: get_nondegenerate_reduction, step 7
ILLL: get_nondegenerate_reduction, step 8
ILLL: get_nondegenerate_reduction, step 9
ILLL: get_nondegenerate_reduction, step 10
ILLL: IndefiniteReduction, after get_nondegenerate_reduction
ILLL: IndefiniteReduction, dim_nondeg=10
ILLL: IndefiniteReduction, We have MredA
ILLL: |Mwork|=10 / 10
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 0 2 0 0 0
 0 0 0 0 0 2 0 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
GRABIT: nbVert=10 eProd=100
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} {1} {2} {3} {4} {5,6} {7} {8} {9} ]
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=2 RankMat(M_conn)=2
ILLL: |Mwork|=2 / 2
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
2 2
 0 2
 2 0
GRABIT: nbVert=2 eProd=4
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0,1} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: Beginning of ComputeReductionIndefinite
ILLL: Passing in Indefinite_LLL det=-4 k=1
ILLL: M=
2 2
 0 2
 2 0
ILLL: B=
2 2
 1 0
 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-4 k=1
ILLL: M=
2 2
 0 2
 2 0
ILLL: B=
2 2
 1 0
 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-4 k=1
ILLL: M=
2 2
 0 -2
 -2 0
ILLL: B=
2 2
 1 0
 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-4 k=1
ILLL: M=
2 2
 0 2
 2 0
ILLL: B=
2 2
 1 0
 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
|ILLL: ComputeReductionIndefinite(None)|=117
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=4 norm_work=4
ILLL: |Mwork|=2 / 2
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
2 2
 0 2
 2 0
GRABIT: nbVert=2 eProd=4
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0,1} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
=======================================================
ILLL: n=2
ILLL: M=
2 2
 0 2
 2 0
ILLL: L1(M)=4
ILLL: eval: i=0 j=1 c=-1
ILLL: eval, off: k=1 val1=2 val2=2
ILLL: eval, diag, val1=0 val2=4
ILLL: eval, summary, delta_off=0 delta_diag=-4 delta=-4
ILLL: eval: i=0 j=1 c=1
ILLL: eval, off: k=1 val1=2 val2=2
ILLL: eval, diag, val1=0 val2=4
ILLL: eval, summary, delta_off=0 delta_diag=-4 delta=-4
ILLL: eval: i=1 j=0 c=-1
ILLL: eval, off: k=0 val1=2 val2=2
ILLL: eval, diag, val1=0 val2=4
ILLL: eval, summary, delta_off=0 delta_diag=-4 delta=-4
ILLL: eval: i=1 j=0 c=1
ILLL: eval, off: k=0 val1=2 val2=2
ILLL: eval, diag, val1=0 val2=4
ILLL: eval, summary, delta_off=0 delta_diag=-4 delta=-4
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=4 norm_work=4
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: Obtained opt from compute_by_block choice=0
ILLL: Call to compute_by_block was successful, returning
ILLL: IndefiniteReduction, We have res
ILLL: IndefiniteReduction, We have MredB / BredB
GRABIT: nbVert=10 eProd=100
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
IVF: Begining of ExtractInvariantVectorFamily
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
|IVF: LLL|=7
|IVF: T_ShortVector|=3
|LSEC: ExtractInvariantVectorFamilyZbasis|=29
LSEC: Begining of ComputeCanonicalForm
LSEC: nbRow=2 n=1
|LSEC: WMat|=24
LSEC: Original WMat=
nbRow=2  Weights=[(2,2), (-2,2)]
 0 1
 1 0
LSEC: Weight reordering WMat=
nbRow=2  Weights=[(-2,2), (2,2)]
 1 0
 0 1
|LSEC: ReorderingSetWeight|=26
WEIGHT: nbWei=2 nbMult=4 hS=2 nbRow=2 nbVertTot=8
WEIGHT: nof_vertices=8
WEIGHT: eGR built
WEIGHT: nbWei=2 nbMult=4 hS=2 e_pow=2
WEIGHT: i_pow=0  (0 | 0)
WEIGHT: i_pow=1  (1 | 1)
|WEIGHT: GetGraphFromWeightedMatrix|=15
|TRA: TRACES_GetCanonicalOrdering|=42
WEIGHT: nbVert=4 hS=2 nof_vertices=8
LSEC: CanonicOrd= 0 1
|LSEC: SHVcan|=66
LSEC: SHVred=
1 2
 1 -1
|LSEC: ReductionMatrix|=10
|LSEC: Matrix products|=2
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
IVF: Begining of ExtractInvariantVectorFamily
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
|IVF: LLL|=7
|IVF: T_ShortVector|=2
|LSEC: ExtractInvariantVectorFamilyZbasis|=23
LSEC: Begining of ComputeCanonicalForm
LSEC: nbRow=2 n=1
|LSEC: WMat|=4
LSEC: Original WMat=
nbRow=2  Weights=[(2,2), (-2,2)]
 0 1
 1 0
LSEC: Weight reordering WMat=
nbRow=2  Weights=[(-2,2), (2,2)]
 1 0
 0 1
|LSEC: ReorderingSetWeight|=18
WEIGHT: nbWei=2 nbMult=4 hS=2 nbRow=2 nbVertTot=8
WEIGHT: nof_vertices=8
WEIGHT: eGR built
WEIGHT: nbWei=2 nbMult=4 hS=2 e_pow=2
WEIGHT: i_pow=0  (0 | 0)
WEIGHT: i_pow=1  (1 | 1)
|WEIGHT: GetGraphFromWeightedMatrix|=13
|TRA: TRACES_GetCanonicalOrdering|=3
WEIGHT: nbVert=4 hS=2 nof_vertices=8
LSEC: CanonicOrd= 0 1
|LSEC: SHVcan|=29
LSEC: SHVred=
1 2
 1 -1
|LSEC: ReductionMatrix|=7
|LSEC: Matrix products|=2
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
IVF: Begining of ExtractInvariantVectorFamily
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
|IVF: LLL|=7
|IVF: T_ShortVector|=1
|LSEC: ExtractInvariantVectorFamilyZbasis|=21
LSEC: Begining of ComputeCanonicalForm
LSEC: nbRow=2 n=1
|LSEC: WMat|=4
LSEC: Original WMat=
nbRow=2  Weights=[(2,2), (-2,2)]
 0 1
 1 0
LSEC: Weight reordering WMat=
nbRow=2  Weights=[(-2,2), (2,2)]
 1 0
 0 1
|LSEC: ReorderingSetWeight|=17
WEIGHT: nbWei=2 nbMult=4 hS=2 nbRow=2 nbVertTot=8
WEIGHT: nof_vertices=8
WEIGHT: eGR built
WEIGHT: nbWei=2 nbMult=4 hS=2 e_pow=2
WEIGHT: i_pow=0  (0 | 0)
WEIGHT: i_pow=1  (1 | 1)
|WEIGHT: GetGraphFromWeightedMatrix|=12
|TRA: TRACES_GetCanonicalOrdering|=2
WEIGHT: nbVert=4 hS=2 nof_vertices=8
LSEC: CanonicOrd= 0 1
|LSEC: SHVcan|=22
LSEC: SHVred=
1 2
 1 -1
|LSEC: ReductionMatrix|=7
|LSEC: Matrix products|=2
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
IVF: Begining of ExtractInvariantVectorFamily
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
|IVF: LLL|=7
|IVF: T_ShortVector|=2
|LSEC: ExtractInvariantVectorFamilyZbasis|=21
LSEC: Begining of ComputeCanonicalForm
LSEC: nbRow=2 n=1
|LSEC: WMat|=3
LSEC: Original WMat=
nbRow=2  Weights=[(2,2), (-2,2)]
 0 1
 1 0
LSEC: Weight reordering WMat=
nbRow=2  Weights=[(-2,2), (2,2)]
 1 0
 0 1
|LSEC: ReorderingSetWeight|=17
WEIGHT: nbWei=2 nbMult=4 hS=2 nbRow=2 nbVertTot=8
WEIGHT: nof_vertices=8
WEIGHT: eGR built
WEIGHT: nbWei=2 nbMult=4 hS=2 e_pow=2
WEIGHT: i_pow=0  (0 | 0)
WEIGHT: i_pow=1  (1 | 1)
|WEIGHT: GetGraphFromWeightedMatrix|=12
|TRA: TRACES_GetCanonicalOrdering|=2
WEIGHT: nbVert=4 hS=2 nof_vertices=8
LSEC: CanonicOrd= 0 1
|LSEC: SHVcan|=21
LSEC: SHVred=
1 2
 1 -1
|LSEC: ReductionMatrix|=7
|LSEC: Matrix products|=1
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
IVF: Begining of ExtractInvariantVectorFamily
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
|IVF: LLL|=7
|IVF: T_ShortVector|=1
|LSEC: ExtractInvariantVectorFamilyZbasis|=20
LSEC: Begining of ComputeCanonicalForm
LSEC: nbRow=2 n=1
|LSEC: WMat|=3
LSEC: Original WMat=
nbRow=2  Weights=[(2,2), (-2,2)]
 0 1
 1 0
LSEC: Weight reordering WMat=
nbRow=2  Weights=[(-2,2), (2,2)]
 1 0
 0 1
|LSEC: ReorderingSetWeight|=17
WEIGHT: nbWei=2 nbMult=4 hS=2 nbRow=2 nbVertTot=8
WEIGHT: nof_vertices=8
WEIGHT: eGR built
WEIGHT: nbWei=2 nbMult=4 hS=2 e_pow=2
WEIGHT: i_pow=0  (0 | 0)
WEIGHT: i_pow=1  (1 | 1)
|WEIGHT: GetGraphFromWeightedMatrix|=12
|TRA: TRACES_GetCanonicalOrdering|=2
WEIGHT: nbVert=4 hS=2 nof_vertices=8
LSEC: CanonicOrd= 0 1
|LSEC: SHVcan|=21
LSEC: SHVred=
1 2
 1 -1
|LSEC: ReductionMatrix|=7
|LSEC: Matrix products|=1
|WEIGHT: WeightMatrix(nbRow,f)|=2
WEIGHT: nbWei=2 nbMult=4 hS=2 nbRow=2 nbVertTot=8
WEIGHT: nof_vertices=8
WEIGHT: eGR built
WEIGHT: nbWei=2 nbMult=4 hS=2 e_pow=2
WEIGHT: i_pow=0  (0 | 0)
WEIGHT: i_pow=1  (1 | 1)
|WEIGHT: GetGraphFromWeightedMatrix|=13
|TRA: TRACES_GetCanonicalOrdering_ListGenerators|=10
WEIGHT: nbVert=4 hS=2 nof_vertices=8
GRABIT: nbVert=2 eProd=4
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
IVF: Begining of ExtractInvariantVectorFamily
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
|IVF: LLL|=7
|IVF: T_ShortVector|=2
|LSEC: ExtractInvariantVectorFamilyZbasis|=22
LSEC: Begining of ComputeCanonicalForm
LSEC: nbRow=2 n=1
|LSEC: WMat|=4
LSEC: Original WMat=
nbRow=2  Weights=[(2,2), (-2,2)]
 0 1
 1 0
LSEC: Weight reordering WMat=
nbRow=2  Weights=[(-2,2), (2,2)]
 1 0
 0 1
|LSEC: ReorderingSetWeight|=18
WEIGHT: nbWei=2 nbMult=4 hS=2 nbRow=2 nbVertTot=8
WEIGHT: nof_vertices=8
WEIGHT: eGR built
WEIGHT: nbWei=2 nbMult=4 hS=2 e_pow=2
WEIGHT: i_pow=0  (0 | 0)
WEIGHT: i_pow=1  (1 | 1)
|WEIGHT: GetGraphFromWeightedMatrix|=12
|TRA: TRACES_GetCanonicalOrdering|=4
WEIGHT: nbVert=4 hS=2 nof_vertices=8
LSEC: CanonicOrd= 0 1
|LSEC: SHVcan|=24
LSEC: SHVred=
1 2
 1 -1
|LSEC: ReductionMatrix|=8
|LSEC: Matrix products|=2
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
IVF: Begining of ExtractInvariantVectorFamily
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
|IVF: LLL|=7
|IVF: T_ShortVector|=1
|LSEC: ExtractInvariantVectorFamilyZbasis|=21
LSEC: Begining of ComputeCanonicalForm
LSEC: nbRow=2 n=1
|LSEC: WMat|=3
LSEC: Original WMat=
nbRow=2  Weights=[(2,2), (-2,2)]
 0 1
 1 0
LSEC: Weight reordering WMat=
nbRow=2  Weights=[(-2,2), (2,2)]
 1 0
 0 1
|LSEC: ReorderingSetWeight|=17
WEIGHT: nbWei=2 nbMult=4 hS=2 nbRow=2 nbVertTot=8
WEIGHT: nof_vertices=8
WEIGHT: eGR built
WEIGHT: nbWei=2 nbMult=4 hS=2 e_pow=2
WEIGHT: i_pow=0  (0 | 0)
WEIGHT: i_pow=1  (1 | 1)
|WEIGHT: GetGraphFromWeightedMatrix|=12
|TRA: TRACES_GetCanonicalOrdering|=2
WEIGHT: nbVert=4 hS=2 nof_vertices=8
LSEC: CanonicOrd= 0 1
|LSEC: SHVcan|=21
LSEC: SHVred=
1 2
 1 -1
|LSEC: ReductionMatrix|=7
|LSEC: Matrix products|=2
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
IVF: Begining of ExtractInvariantVectorFamily
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
|IVF: LLL|=7
|IVF: T_ShortVector|=1
|LSEC: ExtractInvariantVectorFamilyZbasis|=20
LSEC: Begining of ComputeCanonicalForm
LSEC: nbRow=2 n=1
|LSEC: WMat|=3
LSEC: Original WMat=
nbRow=2  Weights=[(2,2), (-2,2)]
 0 1
 1 0
LSEC: Weight reordering WMat=
nbRow=2  Weights=[(-2,2), (2,2)]
 1 0
 0 1
|LSEC: ReorderingSetWeight|=17
WEIGHT: nbWei=2 nbMult=4 hS=2 nbRow=2 nbVertTot=8
WEIGHT: nof_vertices=8
WEIGHT: eGR built
WEIGHT: nbWei=2 nbMult=4 hS=2 e_pow=2
WEIGHT: i_pow=0  (0 | 0)
WEIGHT: i_pow=1  (1 | 1)
|WEIGHT: GetGraphFromWeightedMatrix|=12
|TRA: TRACES_GetCanonicalOrdering|=2
WEIGHT: nbVert=4 hS=2 nof_vertices=8
LSEC: CanonicOrd= 0 1
|LSEC: SHVcan|=21
LSEC: SHVred=
1 2
 1 -1
|LSEC: ReductionMatrix|=7
|LSEC: Matrix products|=1
GRABIT: nbVert=10 eProd=100
IAC: order_blocks_by_signature, n_false_equality=0
|COMB: ApproxCanonicalIndefiniteForm(Qmat1)|=6910
ILLL: IndefiniteReduction, before get_nondegenerate_reduction
ILLL: get_nondegenerate_reduction, step 1
ILLL: get_nondegenerate_reduction, step 2
ILLL: get_nondegenerate_reduction, step 3
ILLL: get_nondegenerate_reduction, step 4
ILLL: get_nondegenerate_reduction, step 5
ILLL: get_nondegenerate_reduction, step 6
ILLL: get_nondegenerate_reduction, step 7
ILLL: get_nondegenerate_reduction, step 8
ILLL: get_nondegenerate_reduction, step 9
ILLL: get_nondegenerate_reduction, step 10
ILLL: IndefiniteReduction, after get_nondegenerate_reduction
ILLL: IndefiniteReduction, dim_nondeg=10
ILLL: IndefiniteReduction, We have MredA
ILLL: |Mwork|=10 / 10
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
10 10
 -2 0 0 0 0 0 0 0 0 0
 0 -2 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 0 2
 0 0 0 0 0 0 0 0 2 0
GRABIT: nbVert=10 eProd=100
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} {1} {2} {3} {4} {5} {6} {7} {8,9} ]
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=1 RankMat(M_conn)=1
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=2
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasis
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: |Mwork|=1 / 1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
1 1
 -2
GRABIT: nbVert=1 eProd=1
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0} ]
ILLL: Obtained opt from compute_by_block choice=3
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: IndefiniteReductionNonDegenerate, n_plus=0 n_minus=1
ILLL: IndefiniteReductionNonDegenerate, Mcall=
1 1
 2
ILLL: IndefiniteReductionNonDegenerate, before LLLreduceBasisDual
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
ILLL: IndefiniteReductionNonDegenerate, B=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, B_T=
1 1
 1
ILLL: IndefiniteReductionNonDegenerate, Mout=
1 1
 -2
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=2 norm_work=2
ILLL: n_iter=0 n_operation=0
ILLL: IndefiniteReductionNonDegenerate, len=2 RankMat(M_conn)=2
ILLL: |Mwork|=2 / 2
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
2 2
 0 2
 2 0
GRABIT: nbVert=2 eProd=4
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0,1} ]
ILLL: Obtained opt from compute_by_block choice=0
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
ILLL: Beginning of ComputeReductionIndefinite
ILLL: Passing in Indefinite_LLL det=-4 k=1
ILLL: M=
2 2
 0 2
 2 0
ILLL: B=
2 2
 1 0
 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-4 k=1
ILLL: M=
2 2
 0 2
 2 0
ILLL: B=
2 2
 1 0
 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-4 k=1
ILLL: M=
2 2
 0 -2
 -2 0
ILLL: B=
2 2
 1 0
 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
ILLL: Passing in Indefinite_LLL det=-4 k=1
ILLL: M=
2 2
 0 2
 2 0
ILLL: B=
2 2
 1 0
 0 1
ILLL: Bstar_norms =
ILLL: Returning from Indefinite_LLL (!ResGS.success)
ILLL: We have computed res
|ILLL: ComputeReductionIndefinite(None)|=122
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=4 norm_work=4
ILLL: |Mwork|=2 / 2
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, Min=
2 2
 0 2
 2 0
GRABIT: nbVert=2 eProd=4
ILLL: IndefiniteReductionNonDegenerate, compute_by_block, LConn=[ {0,1} ]
ILLL: Obtained opt from compute_by_block choice=1
ILLL: IndefiniteReductionNonDegenerate, before compute_reduction
=======================================================
ILLL: n=2
ILLL: M=
2 2
 0 2
 2 0
ILLL: L1(M)=4
ILLL: eval: i=1 j=0 c=-1
ILLL: eval, off: k=0 val1=2 val2=2
ILLL: eval, diag, val1=0 val2=4
ILLL: eval, summary, delta_off=0 delta_diag=-4 delta=-4
ILLL: eval: i=1 j=0 c=1
ILLL: eval, off: k=0 val1=2 val2=2
ILLL: eval, diag, val1=0 val2=4
ILLL: eval, summary, delta_off=0 delta_diag=-4 delta=-4
ILLL: eval: i=0 j=1 c=-1
ILLL: eval, off: k=1 val1=2 val2=2
ILLL: eval, diag, val1=0 val2=4
ILLL: eval, summary, delta_off=0 delta_diag=-4 delta=-4
ILLL: eval: i=0 j=1 c=1
ILLL: eval, off: k=1 val1=2 val2=2
ILLL: eval, diag, val1=0 val2=4
ILLL: eval, summary, delta_off=0 delta_diag=-4 delta=-4
ILLL: IndefiniteReductionNonDegenerate, after compute_reduction
ILLL: IndefiniteReductionNonDegenerate, norm=4 norm_work=4
ILLL: n_iter=0 n_operation=0
ILLL: Obtained opt from compute_by_block choice=0
ILLL: Call to compute_by_block was successful, returning
ILLL: IndefiniteReduction, We have res
ILLL: IndefiniteReduction, We have MredB / BredB
GRABIT: nbVert=10 eProd=100
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
IVF: Begining of ExtractInvariantVectorFamily
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
|IVF: LLL|=8
|IVF: T_ShortVector|=2
|LSEC: ExtractInvariantVectorFamilyZbasis|=26
LSEC: Begining of ComputeCanonicalForm
LSEC: nbRow=2 n=1
|LSEC: WMat|=6
LSEC: Original WMat=
nbRow=2  Weights=[(2,2), (-2,2)]
 0 1
 1 0
LSEC: Weight reordering WMat=
nbRow=2  Weights=[(-2,2), (2,2)]
 1 0
 0 1
|LSEC: ReorderingSetWeight|=18
WEIGHT: nbWei=2 nbMult=4 hS=2 nbRow=2 nbVertTot=8
WEIGHT: nof_vertices=8
WEIGHT: eGR built
WEIGHT: nbWei=2 nbMult=4 hS=2 e_pow=2
WEIGHT: i_pow=0  (0 | 0)
WEIGHT: i_pow=1  (1 | 1)
|WEIGHT: GetGraphFromWeightedMatrix|=13
|TRA: TRACES_GetCanonicalOrdering|=6
WEIGHT: nbVert=4 hS=2 nof_vertices=8
LSEC: CanonicOrd= 0 1
|LSEC: SHVcan|=27
LSEC: SHVred=
1 2
 1 -1
|LSEC: ReductionMatrix|=9
|LSEC: Matrix products|=2
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
IVF: Begining of ExtractInvariantVectorFamily
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
|IVF: LLL|=7
|IVF: T_ShortVector|=2
|LSEC: ExtractInvariantVectorFamilyZbasis|=22
LSEC: Begining of ComputeCanonicalForm
LSEC: nbRow=2 n=1
|LSEC: WMat|=4
LSEC: Original WMat=
nbRow=2  Weights=[(2,2), (-2,2)]
 0 1
 1 0
LSEC: Weight reordering WMat=
nbRow=2  Weights=[(-2,2), (2,2)]
 1 0
 0 1
|LSEC: ReorderingSetWeight|=17
WEIGHT: nbWei=2 nbMult=4 hS=2 nbRow=2 nbVertTot=8
WEIGHT: nof_vertices=8
WEIGHT: eGR built
WEIGHT: nbWei=2 nbMult=4 hS=2 e_pow=2
WEIGHT: i_pow=0  (0 | 0)
WEIGHT: i_pow=1  (1 | 1)
|WEIGHT: GetGraphFromWeightedMatrix|=14
|TRA: TRACES_GetCanonicalOrdering|=3
WEIGHT: nbVert=4 hS=2 nof_vertices=8
LSEC: CanonicOrd= 0 1
|LSEC: SHVcan|=25
LSEC: SHVred=
1 2
 1 -1
|LSEC: ReductionMatrix|=7
|LSEC: Matrix products|=2
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
IVF: Begining of ExtractInvariantVectorFamily
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
|IVF: LLL|=7
|IVF: T_ShortVector|=1
|LSEC: ExtractInvariantVectorFamilyZbasis|=21
LSEC: Begining of ComputeCanonicalForm
LSEC: nbRow=2 n=1
|LSEC: WMat|=3
LSEC: Original WMat=
nbRow=2  Weights=[(2,2), (-2,2)]
 0 1
 1 0
LSEC: Weight reordering WMat=
nbRow=2  Weights=[(-2,2), (2,2)]
 1 0
 0 1
|LSEC: ReorderingSetWeight|=17
WEIGHT: nbWei=2 nbMult=4 hS=2 nbRow=2 nbVertTot=8
WEIGHT: nof_vertices=8
WEIGHT: eGR built
WEIGHT: nbWei=2 nbMult=4 hS=2 e_pow=2
WEIGHT: i_pow=0  (0 | 0)
WEIGHT: i_pow=1  (1 | 1)
|WEIGHT: GetGraphFromWeightedMatrix|=12
|TRA: TRACES_GetCanonicalOrdering|=2
WEIGHT: nbVert=4 hS=2 nof_vertices=8
LSEC: CanonicOrd= 0 1
|LSEC: SHVcan|=21
LSEC: SHVred=
1 2
 1 -1
|LSEC: ReductionMatrix|=7
|LSEC: Matrix products|=1
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
IVF: Begining of ExtractInvariantVectorFamily
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
|IVF: LLL|=7
|IVF: T_ShortVector|=1
|LSEC: ExtractInvariantVectorFamilyZbasis|=20
LSEC: Begining of ComputeCanonicalForm
LSEC: nbRow=2 n=1
|LSEC: WMat|=3
LSEC: Original WMat=
nbRow=2  Weights=[(2,2), (-2,2)]
 0 1
 1 0
LSEC: Weight reordering WMat=
nbRow=2  Weights=[(-2,2), (2,2)]
 1 0
 0 1
|LSEC: ReorderingSetWeight|=17
WEIGHT: nbWei=2 nbMult=4 hS=2 nbRow=2 nbVertTot=8
WEIGHT: nof_vertices=8
WEIGHT: eGR built
WEIGHT: nbWei=2 nbMult=4 hS=2 e_pow=2
WEIGHT: i_pow=0  (0 | 0)
WEIGHT: i_pow=1  (1 | 1)
|WEIGHT: GetGraphFromWeightedMatrix|=12
|TRA: TRACES_GetCanonicalOrdering|=2
WEIGHT: nbVert=4 hS=2 nof_vertices=8
LSEC: CanonicOrd= 0 1
|LSEC: SHVcan|=21
LSEC: SHVred=
1 2
 1 -1
|LSEC: ReductionMatrix|=7
|LSEC: Matrix products|=2
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
IVF: Begining of ExtractInvariantVectorFamily
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
|IVF: LLL|=7
|IVF: T_ShortVector|=1
|LSEC: ExtractInvariantVectorFamilyZbasis|=21
LSEC: Begining of ComputeCanonicalForm
LSEC: nbRow=2 n=1
|LSEC: WMat|=3
LSEC: Original WMat=
nbRow=2  Weights=[(2,2), (-2,2)]
 0 1
 1 0
LSEC: Weight reordering WMat=
nbRow=2  Weights=[(-2,2), (2,2)]
 1 0
 0 1
|LSEC: ReorderingSetWeight|=17
WEIGHT: nbWei=2 nbMult=4 hS=2 nbRow=2 nbVertTot=8
WEIGHT: nof_vertices=8
WEIGHT: eGR built
WEIGHT: nbWei=2 nbMult=4 hS=2 e_pow=2
WEIGHT: i_pow=0  (0 | 0)
WEIGHT: i_pow=1  (1 | 1)
|WEIGHT: GetGraphFromWeightedMatrix|=12
|TRA: TRACES_GetCanonicalOrdering|=2
WEIGHT: nbVert=4 hS=2 nof_vertices=8
LSEC: CanonicOrd= 0 1
|LSEC: SHVcan|=21
LSEC: SHVred=
1 2
 1 -1
|LSEC: ReductionMatrix|=7
|LSEC: Matrix products|=1
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
IVF: Begining of ExtractInvariantVectorFamily
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
|IVF: LLL|=7
|IVF: T_ShortVector|=1
|LSEC: ExtractInvariantVectorFamilyZbasis|=20
LSEC: Begining of ComputeCanonicalForm
LSEC: nbRow=2 n=1
|LSEC: WMat|=3
LSEC: Original WMat=
nbRow=2  Weights=[(2,2), (-2,2)]
 0 1
 1 0
LSEC: Weight reordering WMat=
nbRow=2  Weights=[(-2,2), (2,2)]
 1 0
 0 1
|LSEC: ReorderingSetWeight|=17
WEIGHT: nbWei=2 nbMult=4 hS=2 nbRow=2 nbVertTot=8
WEIGHT: nof_vertices=8
WEIGHT: eGR built
WEIGHT: nbWei=2 nbMult=4 hS=2 e_pow=2
WEIGHT: i_pow=0  (0 | 0)
WEIGHT: i_pow=1  (1 | 1)
|WEIGHT: GetGraphFromWeightedMatrix|=12
|TRA: TRACES_GetCanonicalOrdering|=2
WEIGHT: nbVert=4 hS=2 nof_vertices=8
LSEC: CanonicOrd= 0 1
|LSEC: SHVcan|=21
LSEC: SHVred=
1 2
 1 -1
|LSEC: ReductionMatrix|=7
|LSEC: Matrix products|=1
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
IVF: Begining of ExtractInvariantVectorFamily
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
|IVF: LLL|=7
|IVF: T_ShortVector|=1
|LSEC: ExtractInvariantVectorFamilyZbasis|=21
LSEC: Begining of ComputeCanonicalForm
LSEC: nbRow=2 n=1
|LSEC: WMat|=3
LSEC: Original WMat=
nbRow=2  Weights=[(2,2), (-2,2)]
 0 1
 1 0
LSEC: Weight reordering WMat=
nbRow=2  Weights=[(-2,2), (2,2)]
 1 0
 0 1
|LSEC: ReorderingSetWeight|=17
WEIGHT: nbWei=2 nbMult=4 hS=2 nbRow=2 nbVertTot=8
WEIGHT: nof_vertices=8
WEIGHT: eGR built
WEIGHT: nbWei=2 nbMult=4 hS=2 e_pow=2
WEIGHT: i_pow=0  (0 | 0)
WEIGHT: i_pow=1  (1 | 1)
|WEIGHT: GetGraphFromWeightedMatrix|=12
|TRA: TRACES_GetCanonicalOrdering|=2
WEIGHT: nbVert=4 hS=2 nof_vertices=8
LSEC: CanonicOrd= 0 1
|LSEC: SHVcan|=21
LSEC: SHVred=
1 2
 1 -1
|LSEC: ReductionMatrix|=6
|LSEC: Matrix products|=1
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
IVF: Begining of ExtractInvariantVectorFamily
nbRow=1 nbCol=1
 y=99/100
After the while loop i=0
After the if test r=-1 k=1 kmax=0
|IVF: LLL|=7
|IVF: T_ShortVector|=1
|LSEC: ExtractInvariantVectorFamilyZbasis|=20
LSEC: Begining of ComputeCanonicalForm
LSEC: nbRow=2 n=1
|LSEC: WMat|=3
LSEC: Original WMat=
nbRow=2  Weights=[(2,2), (-2,2)]
 0 1
 1 0
LSEC: Weight reordering WMat=
nbRow=2  Weights=[(-2,2), (2,2)]
 1 0
 0 1
|LSEC: ReorderingSetWeight|=17
WEIGHT: nbWei=2 nbMult=4 hS=2 nbRow=2 nbVertTot=8
WEIGHT: nof_vertices=8
WEIGHT: eGR built
WEIGHT: nbWei=2 nbMult=4 hS=2 e_pow=2
WEIGHT: i_pow=0  (0 | 0)
WEIGHT: i_pow=1  (1 | 1)
|WEIGHT: GetGraphFromWeightedMatrix|=12
|TRA: TRACES_GetCanonicalOrdering|=2
WEIGHT: nbVert=4 hS=2 nof_vertices=8
LSEC: CanonicOrd= 0 1
|LSEC: SHVcan|=21
LSEC: SHVred=
1 2
 1 -1
|LSEC: ReductionMatrix|=7
|LSEC: Matrix products|=1
|WEIGHT: WeightMatrix(nbRow,f)|=1
WEIGHT: nbWei=2 nbMult=4 hS=2 nbRow=2 nbVertTot=8
WEIGHT: nof_vertices=8
WEIGHT: eGR built
WEIGHT: nbWei=2 nbMult=4 hS=2 e_pow=2
WEIGHT: i_pow=0  (0 | 0)
WEIGHT: i_pow=1  (1 | 1)
|WEIGHT: GetGraphFromWeightedMatrix|=13
|TRA: TRACES_GetCanonicalOrdering_ListGenerators|=5
WEIGHT: nbVert=4 hS=2 nof_vertices=8
GRABIT: nbVert=2 eProd=4
GRABIT: nbVert=10 eProd=100
IAC: order_blocks_by_signature, n_false_equality=0
|COMB: ApproxCanonicalIndefiniteForm(Qmat2)|=6776
COMB: INDEF_FORM_TestEquivalence_FullDim, QmatRed1=
10 10
 0 2 0 0 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
COMB: INDEF_FORM_TestEquivalence_FullDim, QmatRed2=
10 10
 0 2 0 0 0 0 0 0 0 0
 2 0 0 0 0 0 0 0 0 0
 0 0 -2 0 0 0 0 0 0 0
 0 0 0 -2 0 0 0 0 0 0
 0 0 0 0 -2 0 0 0 0 0
 0 0 0 0 0 -2 0 0 0 0
 0 0 0 0 0 0 -2 0 0 0
 0 0 0 0 0 0 0 -2 0 0
 0 0 0 0 0 0 0 0 -2 0
 0 0 0 0 0 0 0 0 0 -2
|COMB: database.attempt_equiv|=172
COMB: INDEF_FORM_TestEquivalence_FullDim, successful database call
Normal termination of INDEF_FORM_TestEquivalence
runtime = 137ms 879micros timeanddate=Sun May 25 21:35:27 2025
